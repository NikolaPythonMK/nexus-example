/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */







declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  loginCredentials: { // input type
    email: string; // String!
    password: string; // String!
  }
}

export interface NexusGenEnums {
  EmploymentType: "CASUAL" | "CONTRACT" | "FULL_TIME" | "INTERN" | "PART_TIME" | "PROBATION" | "SEASONAL" | "TEMPORARY"
  UserRole: "ADMIN" | "USER"
  UserStatus: "ACTIVE" | "AWAY" | "BUSINESS_TRAVEL" | "LUNCH_BREAK" | "MEETING" | "OFFLINE" | "ON_LEAVE" | "OUT_OF_OFFICE" | "REMOTE" | "SICK" | "TRAINING" | "VACATION"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  Mutation: {};
  Post: { // root type
    body?: string | null; // String
    id?: number | null; // Int
    published?: boolean | null; // Boolean
    title?: string | null; // String
  }
  Query: {};
  User: { // root type
    address?: string | null; // String
    date_of_birth?: string | null; // String
    email?: string | null; // String
    emergency_contact_name?: string | null; // String
    emergency_contact_phone?: string | null; // String
    first_name?: string | null; // String
    id?: string | null; // ID
    language?: string | null; // String
    last_name?: string | null; // String
    nationality?: string | null; // String
    nick_name?: string | null; // String
    phone?: string | null; // String
    photo?: string | null; // String
    role: NexusGenEnums['UserRole']; // UserRole!
    status?: NexusGenEnums['UserStatus'] | null; // UserStatus
    time_zone?: string | null; // String
    work_information?: NexusGenRootTypes['WorkInformation'] | null; // WorkInformation
  }
  WorkInformation: { // root type
    date_of_joining?: string | null; // String
    department?: string | null; // String
    designation?: string | null; // String
    employee_id?: number | null; // Int
    employment_type?: NexusGenEnums['EmploymentType'] | null; // EmploymentType
    id?: string | null; // ID
    location?: string | null; // String
    supervisor?: NexusGenRootTypes['User'] | null; // User
  }
  loginResponse: { // root type
    error: boolean; // Boolean!
    message?: string | null; // String
    username?: string | null; // String
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  Mutation: { // field return type
    login: NexusGenRootTypes['loginResponse'] | null; // loginResponse
  }
  Post: { // field return type
    body: string | null; // String
    id: number | null; // Int
    published: boolean | null; // Boolean
    title: string | null; // String
  }
  Query: { // field return type
    drafts: Array<NexusGenRootTypes['Post'] | null>; // [Post]!
    getById: NexusGenRootTypes['Post']; // Post!
  }
  User: { // field return type
    address: string | null; // String
    date_of_birth: string | null; // String
    email: string | null; // String
    emergency_contact_name: string | null; // String
    emergency_contact_phone: string | null; // String
    first_name: string | null; // String
    id: string | null; // ID
    language: string | null; // String
    last_name: string | null; // String
    nationality: string | null; // String
    nick_name: string | null; // String
    phone: string | null; // String
    photo: string | null; // String
    role: NexusGenEnums['UserRole']; // UserRole!
    status: NexusGenEnums['UserStatus'] | null; // UserStatus
    time_zone: string | null; // String
    work_information: NexusGenRootTypes['WorkInformation'] | null; // WorkInformation
  }
  WorkInformation: { // field return type
    date_of_joining: string | null; // String
    department: string | null; // String
    designation: string | null; // String
    employee_id: number | null; // Int
    employment_type: NexusGenEnums['EmploymentType'] | null; // EmploymentType
    id: string | null; // ID
    location: string | null; // String
    supervisor: NexusGenRootTypes['User'] | null; // User
  }
  loginResponse: { // field return type
    error: boolean; // Boolean!
    message: string | null; // String
    username: string | null; // String
  }
}

export interface NexusGenFieldTypeNames {
  Mutation: { // field return type name
    login: 'loginResponse'
  }
  Post: { // field return type name
    body: 'String'
    id: 'Int'
    published: 'Boolean'
    title: 'String'
  }
  Query: { // field return type name
    drafts: 'Post'
    getById: 'Post'
  }
  User: { // field return type name
    address: 'String'
    date_of_birth: 'String'
    email: 'String'
    emergency_contact_name: 'String'
    emergency_contact_phone: 'String'
    first_name: 'String'
    id: 'ID'
    language: 'String'
    last_name: 'String'
    nationality: 'String'
    nick_name: 'String'
    phone: 'String'
    photo: 'String'
    role: 'UserRole'
    status: 'UserStatus'
    time_zone: 'String'
    work_information: 'WorkInformation'
  }
  WorkInformation: { // field return type name
    date_of_joining: 'String'
    department: 'String'
    designation: 'String'
    employee_id: 'Int'
    employment_type: 'EmploymentType'
    id: 'ID'
    location: 'String'
    supervisor: 'User'
  }
  loginResponse: { // field return type name
    error: 'Boolean'
    message: 'String'
    username: 'String'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    login: { // args
      credentials: NexusGenInputs['loginCredentials']; // loginCredentials!
    }
  }
  Query: {
    getById: { // args
      id: number; // Int!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}